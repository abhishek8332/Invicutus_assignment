{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["n","abb","dict","boo","tabb","html","i","document","getElementById","innerHTML","abc","e","preventDefault","value","axios","get","then","res","text","c","words","toLowerCase","replace","split","length","Object","fromEntries","entries","sort","a","console","log","fun1","data","App","className","onSubmit","type","id","placeholder","htmlFor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sKAGIA,EAGAC,E,gFADAC,EAAK,GAELC,GAAI,EAwCR,IAAIC,EAAK,WAEP,IADA,IAAIC,EAAO,uBACHC,EAAE,EAAEA,EAAEN,EAAEM,IACZD,GAAM,OACNA,GAAM,OAASJ,EAAIK,GAAG,GAAK,QAC3BD,GAAM,OAASJ,EAAIK,GAAG,GAAK,QAG3BD,GAAM,QAGVA,GAAM,WACNE,SAASC,eAAe,OAAOC,UAAYJ,GAIzCK,EAAI,SAACC,GACNA,EAAEC,iBACHZ,EAAEO,SAASC,eAAe,OAAOK,MACjCC,IAAMC,IAAI,sEAAsEC,MAAK,SAAAC,GAAG,OAnD1F,SAAcC,GAGZ,IANeC,EAMXC,EAAQF,EAAKG,cAAcC,QAAQ,wBAAyB,IAAIC,MAAM,MAE1E,GAAGpB,EACH,IAAI,IAAIG,EAAE,EAAGA,EAAEc,EAAMI,OAAOlB,MATba,EAWFC,EAAMd,KAVJ,KAASa,GAAK,KAAWA,GAAK,KAASA,GAAK,OAWrDjB,EAAKkB,EAAMd,IAKbJ,EAAKkB,EAAMd,IAAIJ,EAAKkB,EAAMd,IAAI,EAH9BJ,EAAKkB,EAAMd,IAAI,GAKjBH,GAAI,EAGLF,EAAKwB,OAAOC,YACXD,OAAOE,QAAQzB,GAAM0B,MAAK,kBAAGC,EAAH,+CAAiBA,MAI/C5B,EAAIwB,OAAOE,QAAQ1B,GACnB6B,QAAQC,IAAI9B,GAGZG,IAuB4F4B,CAAKf,EAAIgB,UA+BtFC,MA1Bf,WAGE,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMC,SAAU,SAACzB,GAAD,OAAKD,EAAIC,IAAzB,UAEE,sBAAKwB,UAAU,qBAAf,UACI,uBAAOE,KAAK,SAASF,UAAU,eAAeG,GAAG,MAAMC,YAAY,IAAI1B,MAAOb,IAC9E,uBAAOwC,QAAQ,MAAf,uBAGJ,wBAAQH,KAAK,SAASF,UAAU,yBAAhC,uBAIR,uBACA,wCACA,qBAAKG,GAAG,YC7EOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5C,SAASC,eAAe,SAM1BiC,M","file":"static/js/main.5ef3c83c.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\n\nlet n;\nlet text;\nlet dict={};\nlet abb;\nlet boo=true;\n\n\n\n\nfunction isalpha(c) {\n  return (((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')));\n  }\nfunction fun1(text){\n  \n  \n  var words = text.toLowerCase().replace(/[.]|[,]|[-]|20|1|500/g, \"\").split(/\\s/);\n  \n  if(boo){\n  for(var i=0 ;i<words.length;i++)\n  {\n    if(isalpha(words[i])){\n    if(!dict[words[i]])\n    {\n      dict[words[i]]=1;\n    }\n    else{\n      dict[words[i]]=dict[words[i]]+1;\n    }}\n    boo=false;\n\n  }}\n   abb= Object.fromEntries(\n    Object.entries(dict).sort(([,a],[,b]) => b-a)\n    \n);\n\nabb=Object.entries(abb)\nconsole.log(abb);\n\n\ntabb();\n  \n}\n\nlet tabb=()=>{\n  var html = \"<table border='1|1'>\";\n  for(var i=0;i<n;i++){\n      html+=\"<tr>\";\n      html+=\"<td>\" + abb[i][0] + \"</td>\";\n      html+=\"<td>\" + abb[i][1] + \"</td>\";\n      \n      \n      html+=\"</tr>\";\n  \n  }\n  html+=\"</table>\";\n  document.getElementById(\"box\").innerHTML = html;\n\n}\n\nlet abc=(e)=>{\n   e.preventDefault();\n  n=document.getElementById(\"num\").value;\n  axios.get('https://raw.githubusercontent.com/invictustech/test/main/README.md').then(res=>fun1(res.data))\n  \n}\n\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n      <form onSubmit={(e)=>abc(e)}>\n\n        <div className=\"form-floating mb-3\">\n            <input type=\"number\" className=\"form-control\" id=\"num\" placeholder=\"1\" value={n} />\n            <label htmlFor=\"num\">Number</label>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-sm btn-success\" >submit</button>\n\n</form>\n\n<br/>\n<h3>Table </h3>\n<div id=\"box\">\n\n</div>\n\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}